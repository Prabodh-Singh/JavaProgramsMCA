// Java program to implement stack using arrays

import java.util.Scanner;

class stack {
	
	int top;
	int maxSize = 100;
	int[] arr = new int[maxSize];
	
	boolean isEmpty() {
		return (top<0);
	}
	
	stack(){
		top = -1;
	}
	
	boolean push(Scanner inputScan) {
		if (top==maxSize-1) {
			System.out.println("Stack is full (Overflow)");
			return false;
		}
		else {
			System.out.println("Enter integer to be pushed");
			int value = inputScan.nextInt();
			top++;
			arr[top] = value;
			System.out.println("Item pushed");
			return true;
		}
	}
	
	boolean pop() {
		if(top==-1) {
			System.out.println("Stack is empty(Underflow)");
			return false;
		}
		else {
			top--;
			System.out.println("Item popped");
			return true;
		}
	}
	
	void display() {
		if(top==-1) {
			System.out.println("Stack is empty");
		}
		else {
		System.out.println("\nStack elements are as below:-");
		for(int i = top; i>=0; i--) {
			System.out.println(arr[i]);
		}
	}
	}


	public static void main(String[] args) {
		int choice = 0;
		Scanner inputScan = new Scanner(System.in);
		stack s = new stack();
		System.out.println("*******Stack Operatrions using array*******\n");
		while(choice != 4) {
			System.out.println("\nChoose one from the below options");
			System.out.println("1-Push, 2-Pop, 3-Display, 4-Exit");
			System.out.println("Enter your choice by pressing respective number");
			
			choice = inputScan.nextInt();
			
			switch(choice) {
			case 1:{
				s.push(inputScan);
				break;
			}
			case 2:{
				s.pop();
				break;
			}
			case 3:{
				s.display();
				break;
			}
			case 4:{
				System.out.println("Exit successful");
				System.exit(0);
				break;
			}
			default:{
				System.out.println("Please Enter Valid Choice (1,2,3 or 4)");
			}
			}
		}

	}
}
